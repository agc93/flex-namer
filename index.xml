<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FlexNamer Documentation</title><link>/</link><description>Recent content on FlexNamer Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Mar 2024 02:17:43 +1000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>/docs/introduction/</link><pubDate>Mon, 04 Mar 2024 02:17:43 +1000</pubDate><guid>/docs/introduction/</guid><description>FlexNamer is a small utility designed for automating repeatable file renaming tasks.
There are already great tools out there for batch renaming files (my personal tool of choice is the PowerRename in PowerToys), but my workflow often involves renaming batches of files from external sources with the same format into a new naming format.
Up until now, I just had a text file with a bunch of pre-made regexes I would drop into PowerRename but that felt sub-optimal, and I like over-engineering things so here we are.</description></item><item><title>Command-Line Usage</title><link>/docs/usage/</link><pubDate>Mon, 04 Mar 2024 02:17:43 +1000</pubDate><guid>/docs/usage/</guid><description>ðŸ’¡ The FlexNamer CLI supports both Windows and Linux! Just download the right binary for your target platform. Getting Help linkYou can use the -h/--help option to get help for the available commands and options when using the CLI:
USAGE: FlexNamer rename [DIR] [OPTIONS] ARGUMENTS: [DIR] The folder to search for file(s) to rename OPTIONS: -h, --help Prints help information -f, --filter Wildcard pattern to match file(s) to, such as &amp;#34;*.</description></item><item><title>Formats</title><link>/docs/formats/</link><pubDate>Sat, 21 Jan 2023 16:13:15 +0000</pubDate><guid>/docs/formats/</guid><description>Introduction linkFlexNamer is built on a simple plugin architecture that keeps individual naming formats in separate plugins so that FlexNamer itself doesn&amp;rsquo;t need to know about every possible name variation you might want to use.
As well as keeping the application simple and allowing you to build your own naming formats for your exact use case, this also makes it possible to share naming formats if you are renaming files from a commonly used data source.</description></item></channel></rss>